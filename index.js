// Есть 90 человек. Каждый из этих 90 человек относится к одной из двух категорий. Одни на все вопросы говорят правду, другие — всегда врут. У каждого ровно 1 любимое блюдо из списка (макароны/пельмени/вареники). Каждому задают три вопроса:
// Ваше любимое блюдо — макароны?
// Ваше любимое блюдо — пельмени?
// Ваше любимое блюдо — вареники?
// Результаты получились такие:
// на первый вопрос утвердительно ответило 45 человек,
// на второй — 35,
// на третий — 30.
// Сколько человек всегда говорят правду?

// ответ: Используя полученные результаты, мы можем вычислить, сколько человек всегда говорят правду. Они не могут ответить утвердительно на все три вопроса, так как тогда сумма их ответов превысила бы 90. Значит, мы можем утверждать, что всегда говорят правду те, кто ответили утвердительно только на один из трех вопросов. Поэтому количество таких людей равно 45 + 35 + 30 - 90 = 30. Ответ: 30 человек.


// 2.Есть числа от трех до одиннадцати. Есть квадрат — 3 на 3 клетки:
// а б в
// г д е
// ё ж з
// (Буквы ничего не значат, кроме того, что числа не повторяются)
// Можно ли расставить числа в клетки квадрата таким образом, что перемножения чисел в строках дает тот же результат, что и произведение чисел в столбцах с теми же номерами?
// Если можно — расставьте, если нельзя — объясните почему.


// Нельзя расставить числа так, чтобы перемножения чисел в строках давали тот же результат, что и произведения чисел в столбцах с теми же номерами.
// Это следует из того, что все числа между 3 и 11 являются нечетными, а результат перемножения нечетных чисел всегда нечетен. А результат произведения чисел в столбцах с теми же номерами всегда четен.


//3.Нельзя расставить числа так, чтобы перемножения чисел в строках давали тот же результат, что и произведения чисел в столбцах с теми же номерами.
// Это следует из того, что все числа между 3 и 11 являются нечетными, а результат перемножения нечетных чисел всегда нечетен. А результат произведения чисел в столбцах с теми же номерами всегда четен.
// isvajkin@gmail.com
// Ученые разработали новый материал неизвестной прочности. Они знают, что материал разбивается при падении с высоты от 1 метра до 5 000 метров. Но не знают, с какой именно высоты. Чтобы определить прочность, ученые поднимают предмет на некоторую высоту и сбрасывают его оттуда. Их задача — определить, начиная с какой именно высоты предмет начнет разбиваться.
// Специальная платформа, с помощью которой они осуществляют эксперимент, скидывает предмет только с дискретных высот (1, 2, 3 ... 4999, 5000 метров — платформа не может скинуть предмет, например, с 2,5 метров. Точности в 1 метр ученым вполне достаточно). При падении с высоты "n" метров предмет уничтожается. Если же его сбрасывали с высоты ниже "n", то его можно использовать в повторных экспериментах.
// Нужно АБСОЛЮТНО ТОЧНО найти ту высоту, начиная с которой предметы разрушаются. Сделать это нужно за МИНИМАЛЬНО возможное число экспериментов. У ученых при этом всего 2 предмета, но они абсолютно одинаковые. Каким образом этого можно достигнуть? Сколько экспериментов при этом максимально потребуется?


// Можно применить бинарный поиск для определения высоты, с которой предмет разбивается. Это позволит сократить число экспериментов до log2(5000) = 12 экспериментов. В каждом эксперименте предмет сбрасывается с высоты, равной среднему значению высоты двух текущих границ. Если предмет не разбился, границу с более низкой высотой устанавливают в эту высоту, в противном случае - в высоту с более высокой высотой. В результате, через 12 экспериментов ученые смогут узнать точную высоту, с которой предмет разбивается.

// 4.В университетскую столовую пришли трое студентов купить пирожки. Один хочет купить треть всех имеющихся в столовой пирожков и еще 2 пирожка. Другой хочет купить четверть от всех имеющихся пирожков и ещё 3 пирожка. А третий хочет купить пятую часть всех пирожков и ещё 8 пирожков. Если все трое купят столько пирожков, сколько планируют, то в столовой как раз закончатся все пирожки. Сколько пирожков есть в столовой? 

// В университетской столовой всего 45 пирожков.



// Написать метод/функцию, который/которая на вход принимает массив городов. В качестве результата возвращает строку, где города разделены запятыми, а в конце стоит точка. 

function formatCities(cities) {
    return cities.join(', ') + '.';
  }


// Написать метод/функцию, который/которая на вход принимает число (float), а на выходе получает число, округленное до пятерок.
  
function roundToFive(num) {
    return Math.round(num / 5) * 5;
  }

// Написать метод/функцию, который/которая на вход принимает число (int), а на выходе выдает слово “компьютер” в падеже, соответствующем указанному количеству. Например, «25 компьютеров», «41 компьютер», «1048 компьютеров».

function getComputerNounCase(number) {
    if (!Number.isInteger(number)) return "Invalid input";
  
    let lastDigit = number % 10;
    let penultimateDigit = Math.floor(number / 10) % 10;
  
    if (penultimateDigit === 1) return number + " компьютеров";
    if (lastDigit === 1) return number + " компьютер";
    if (lastDigit >= 2 && lastDigit <= 4) return number + " компьютера";
    return number + " компьютеров";
  }
  //Написать метод/функцию, который/которая на вход принимает целое число, а на выходе возвращает то, является ли число простым (не имеет делителей кроме 1 и самого себя).

  function isPrime(num) {
    if (num <= 1) return false;
    for (let i = 2; i < num; i++) {
      if (num % i === 0) return false;
    }
    return true;
  }

  //Написать метод, который определяет, какие элементы присутствуют в двух экземплярах в каждом из массивов (= в двух и более, причем в каждом). На вход подаются два массива. На выходе массив с необходимыми совпадениями.

  function commonElements(array1, array2) {
    const result = [];
  
    for (let i = 0; i < array1.length; i++) {
      if (array2.includes(array1[i]) && !result.includes(array1[i])) {
        result.push(array1[i]);
      }
    }
  
    return result;
  }

  //Написать метод, который в консоль выводит таблицу умножения. На вход метод получает число, до которого выводит таблицу умножения. В консоли должна появиться таблица.

// Важно: 
// В последней строке между числами ровно по одному пробелу должно выводиться. 
// В каждом столбце числа должны быть выровнены по правому краю.

function multiplicationTable(n) {
    let maxLength = n.toString().length;
    for (let i = 1; i <= n; i++) {
      let row = "";
      for (let j = 1; j <= n; j++) {
        let cell = i * j;
        let cellLength = cell.toString().length;
        for (let k = 0; k < maxLength - cellLength + 1; k++) {
          row += " ";
        }
        row += cell + " ";
      }
      console.log(row);
    }
  }
  